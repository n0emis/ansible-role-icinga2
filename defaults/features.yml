---
# Feature Options
# leave empty to keep icinga2 shipped defaults
# if you take controll about a config file you have to care about ALL options.
# !!! Don't forget to remove the empty dict symbol {} !!!

icinga2_features_api_options: {}
#  accept_config: "true"
#  accept_commands: "true"
#  ticket_salt: "TicketSalt"
icinga2_features_command_options: {}
icinga2_features_compatlog_options: {}
icinga2_features_debuglog_options: {}
#  severity: "\"debug\""
#  path: "LocalStateDir + \"/log/icinga2/debug.log\""
icinga2_features_elasticsearch_options: {}
#  host: "\"127.0.0.1\""
#  port: "9200"
#  index: "\"icinga2\""
#  enable_send_perfdata: "false"
#  flush_threshold: "1024"
#  flush_interval: "10s"
icinga2_features_gelf_options: {}
#  host: "\"127.0.0.1\""
#  port: "12201"
icinga2_features_graphite_options: {}
#  host: "\"127.0.0.1\""
#  port: "2003"
icinga2_features_livestatus_options: {}
icinga2_features_opentsdb_options: {}
#  host: "\"127.0.0.1\""
#  port: "4242"
icinga2_features_perfdata_options: {}
icinga2_features_statusdata_options: {}
icinga2_features_syslog_options: {}
#  severity: "\"warning\""
icinga2_features_checker_options: {}
icinga2_features_mainlog_options: {}
#  severity: "\"information\""
#  path: "LocalStateDir + \"/log/icinga2/icinga2.log\""
icinga2_features_notification_options: {}
icinga2_features_influxdb_options: {}
#  host: "\"127.0.0.1\""
#  port: "8086"
#  database: "\"icinga2\""
#  flush_threshold: "1024"
#  flush_interval: "10s"
#  host_template:
#    measurement: "\"$host.check_command$\""
#    tags:
#      hostname: "\"$host.name$\""
#  service_template:
#    measurement: "\"$service.check_command$\""
#    tags:
#      hostname: "\"$host.name$\""
#      service: "\"$service.name$\""



icinga2_features_ido_options: {}

#icinga2_features_ido_options: "{{ icinga2_ido_options }}"

# Feature variables

# include special feature handler in main.yml

icinga2_feature_has_handler:
  api: True
  command: False
  compatlog: False
  debuglog: False
  elasticsearch: False
  gelf: False
  graphite: False
  influxdb: False
  livestatus: False
  opentsdb: False
  perfdata: False
  statusdata: False
  syslog: False
  checker: False
  mainlog: False
  notification: False
  ido-mysql: True
  ido-pgsql: True

icinga2_features_object_name:
  api: ApiListener
  checker: CheckerComponent
  command: ExternalCommandListener
  compatlog: CompatLogger
  debuglog: FileLogger
  elasticsearch: ElasticsearchWriter
  gelf: GelfWriter
  graphite: GraphiteWriter
  ido-mysql: IdoMysqlConnection
  ido-pgsql: IdoPgsqlConnection
  influxdb: InfluxdbWriter
  livestatus: LivestatusListener
  mainlog: FileLogger
  notification: NotificationComponent
  opentsdb: OpenTsdbWriter
  perfdata: PerfdataWriter
  statusdata: StatusDataWriter
  syslog: SyslogLogger

icinga2_features_library:
  checker: checker
  command: compat
  compatlog: compat
  elasticsearch: perfdata
  gelf: perfdata
  graphite: perfdata
  ido-mysql: db_ido_mysql
  ido-pgsql: db_ido_pgsql
  influxdb: perfdata
  livestatus: livestatuslib
  notification: notification
  opentsdb: perfdata
  perfdata: perfdata
  statusdata: compat

icinga2_features_options:
  api: "{{ icinga2_features_api_options }}"
  command: "{{ icinga2_features_command_options }}"
  compatlog: "{{ icinga2_features_compatlog_options }}"
  debuglog: "{{ icinga2_features_debuglog_options }}"
  elasticsearch: "{{ icinga2_features_elasticsearch_options }}"
  gelf: "{{ icinga2_features_gelf_options }}"
  graphite: "{{ icinga2_features_graphite_options }}"
  influxdb: "{{ icinga2_features_influxdb_options }}"
  livestatus: "{{ icinga2_features_livestatus_options }}"
  opentsdb: "{{ icinga2_features_opentsdb_options }}"
  perfdata: "{{ icinga2_features_perfdata_options }}"
  statusdata: "{{ icinga2_features_statusdata_options }}"
  syslog: "{{ icinga2_features_syslog_options }}"
  checker: "{{ icinga2_features_checker_options }}"
  mainlog: "{{ icinga2_features_mainlog_options }}"
  notification: "{{ icinga2_features_notification_options }}"
  ido-mysql: {}
  ido-pgsql: {}

icinga2_features_head_comment:
  api: |
    /**
     * The API listener is used for distributed monitoring setups.
     */
  checker: |
    /**
     * The checker component takes care of executing service checks.
     */
  command: |
    /**
     * The ExternalCommandListener implements support for the external
     * commands pipe.
     */
  compatlog: |
    /**
     * The CompatLogger type is responsible for writing log files in a format
     * that is compatible with Icinga 1.x.
     */
  debuglog: |
    /**
     * The FileLogger type writes log information to a log file.
     * Unlike the mainlog feature this sets up a logger
     * with severity "debug".
     */
  elasticsearch: |
    /**
     * This feature forwards check results, state changes and notification
     * events to an Elasticsearch installation over its HTTP API. The check
     * results include parsed performance data metrics if enabled.
     */
  gelf: |
    /**
     * The GelfWriter type writes event log entries
     * to a GELF tcp socket provided by Graylog,
     * Logstash or any other receiver.
     */
  graphite: |
    /**
     * The GraphiteWriter type writes check result metrics and
     * performance data to a graphite tcp socket.
     */
  ido-mysql: |
    /**
     * The db_ido_mysql library implements IDO functionality
     * for MySQL.
     */
  ido-pgsql: |
    /**
     * The db_ido_mysql library implements IDO functionality
     * for postgres sql.
     */
  influxdb: |
    /**
     * The InfluxdbWriter type writes check result metrics and
     * performance data to an InfluxDB HTTP API
     */
  livestatus: |
    /**
     *  The livestatus library implements the livestatus query protocol.
     */
  mainlog: |
    /**
     * The FileLogger type writes log information to a file.
     */
  notification: |
    /**
     * The notification component takes care of executing service checks.
     */
  opentsdb: |
    /**
     * The OpenTsdbWriter type writes check result metrics and
     * performance data to a OpenTSDB tcp socket.
     */
  perfdata: |
    /**
     * The PerfdataWriter type writes performance data files and rotates
     * them in a regular interval.
     */
  statusdata: |
    /**
     * The StatusDataWriter type periodically updates the status.dat and objects.cache
     * files. These are used by the Icinga 1.x CGIs to display the state of
     * hosts and services.
     */
  syslog: |
    /**
     * The SyslogLogger type writes log information to syslog.
     */
